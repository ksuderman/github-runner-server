#!/bin/bash
set -e

# The cloud-init script used when spawning a Jetstream runner

DOWNLOAD_URL=https://github.com/actions/runner/releases/download/v2.320.1/actions-runner-linux-x64-2.320.1.tar.gz
RUNNER_SERVER=http://149.165.174.68:5000


# These values will be injected by the server when it receives a workflow_job request from GitHub.
VM_NAME=__VM_NAME__
LABELS=__LABELS__
GH_PAT="__GITHUB_TOKEN__"
GH_REPO="__GITHUB_REPO__"
#GH_REPO="galaxy-k8s-action-example-1"

# Hard code this so we only accept jobs from this org.
GH_OWNER="ksuderman"

# Deregister runner on shutdown
cleanup() {
    if [[ -e ./configsh ]] ; then
      echo "Deregistering runner..."
      ./config.sh remove --token $RUNNER_TOKEN
    fi
    #shutdown -h now
    echo "Sending a DELETE request to the runner server..."
    curl -X DELETE "$RUNNER_SERVER/cleanup/$VM_NAME"
}
trap cleanup EXIT

# Install dependencies
apt update && apt install -y curl jq

# Download and unpack the GitHub Actions Runner
cd /home/ubuntu
mkdir actions-runner && cd actions-runner
curl -o actions-runner-linux-x64.tar.gz -L $DOWNLOAD_URL
tar xzf actions-runner-linux-x64.tar.gz

# Get a token for the runner
RUNNER_TOKEN=$(curl -sX POST -H "Authorization: token $GH_PAT" \
    -H "Accept: application/vnd.github.v3+json" \
    "https://api.github.com/repos/$GH_OWNER/$GH_REPO/actions/runners/registration-token" \
    | jq -r .token)

# Configure and start the runner
export RUNNER_ALLOW_RUNASROOT=1
tag=$(cat /dev/urandom | tr -dc 'a-f0-9' | head -c 8)
./config.sh --url "https://github.com/$GH_OWNER/$GH_REPO" --token $RUNNER_TOKEN --unattended --name "jetstream-runner-$tag" --labels $LABELS
./run.sh
